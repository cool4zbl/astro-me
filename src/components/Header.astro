---
import ThemeToggle from './ThemeToggle.astro';
import SocialLinks from './SocialLinks.astro';
import { getLangFromUrl, getTranslations, getLocalizedPath } from '../i18n/config';

const lang = getLangFromUrl(Astro.url);
const t = getTranslations(lang);

const currentPath = Astro.url.pathname;
const basePath = lang === 'en' ? currentPath : currentPath.replace(`/${lang}`, '');

const navItems = [
  { key: 'home', href: getLocalizedPath('/', lang) },
  { key: 'blog', href: getLocalizedPath('/blog', lang) },
  { key: 'projects', href: getLocalizedPath('/projects', lang) },
  { key: 'experience', href: getLocalizedPath('/experience', lang) },
  { key: 'interests', href: getLocalizedPath('/interests', lang) },
  { key: 'search', href: getLocalizedPath('/search', lang) }
];
---

<header class="sticky top-0 z-40 w-full border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60">
  <div class="container mx-auto flex h-14 items-center justify-between px-4">
    <!-- 改进品牌标识 -->
    <div class="flex items-center space-x-2">
      <a href={getLocalizedPath('/', lang)} class="flex items-center space-x-2 group">
        <div class="h-7 w-7 rounded-lg bg-gradient-primary flex items-center justify-center">
          <span class="text-primary-foreground font-bold text-xs">BZ</span>
        </div>
        <span class="text-lg font-bold group-hover:text-primary transition-colors">
          Binliu Zhang
        </span>
      </a>
    </div>
    
    <!-- 改进导航菜单，添加移动端支持 -->
    <nav class="hidden md:flex items-center space-x-4">
      {navItems.map((item) => (
        <a 
          href={item.href} 
          class={`text-sm font-medium transition-colors hover:text-primary relative ${
            currentPath === item.href ? 'text-primary' : 'text-muted-foreground'
          }`}
        >
          {t(`nav.${item.key}`)}
          {currentPath === item.href && (
            <div class="absolute -bottom-1 left-0 right-0 h-0.5 bg-primary rounded-full"></div>
          )}
        </a>
      ))}
    </nav>

    <!-- 添加右侧工具栏 -->
    <div class="flex items-center space-x-3">
      <!-- 社交媒体链接 -->
      <div class="hidden lg:block">
        <SocialLinks size="sm" lang={lang} />
      </div>
      
      <!-- 语言切换 -->
      <div class="flex items-center space-x-1 bg-muted rounded-lg p-1">
        <a 
          href={basePath === '/' ? '/zh' : `/zh${basePath}`} 
          class={`text-xs px-2 py-1 rounded transition-colors ${
            lang === 'zh' 
              ? 'bg-primary text-primary-foreground shadow-sm' 
              : 'hover:bg-background text-muted-foreground hover:text-foreground'
          }`}
        >
          中
        </a>
        <a 
          href={basePath} 
          class={`text-xs px-2 py-1 rounded transition-colors ${
            lang === 'en' 
              ? 'bg-primary text-primary-foreground shadow-sm' 
              : 'hover:bg-background text-muted-foreground hover:text-foreground'
          }`}
        >
          EN
        </a>
      </div>
      
      <ThemeToggle />
      
      <!-- 添加移动端菜单按钮 -->
      <button 
        class="md:hidden p-2 rounded-lg hover:bg-muted transition-colors"
        aria-label="Toggle menu"
        id="mobile-menu-button"
      >
        <svg class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
        </svg>
      </button>
    </div>
  </div>
  
  <!-- 添加移动端菜单 -->
  <div class="md:hidden border-t bg-background/95 backdrop-blur hidden" id="mobile-menu">
    <div class="container mx-auto px-4 py-3 space-y-3">
      {navItems.map((item) => (
        <a 
          href={item.href} 
          class={`block text-sm font-medium transition-colors hover:text-primary ${
            currentPath === item.href ? 'text-primary' : 'text-muted-foreground'
          }`}
        >
          {t(`nav.${item.key}`)}
        </a>
      ))}
      <div class="pt-3 border-t">
        <SocialLinks size="sm" showLabels={true} lang={lang} />
      </div>
    </div>
  </div>
</header>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const menuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    
    if (menuButton && mobileMenu) {
      menuButton.addEventListener('click', function() {
        mobileMenu.classList.toggle('hidden');
      });
      
      // 点击外部关闭菜单
      document.addEventListener('click', function(event) {
        if (!menuButton.contains(event.target) && !mobileMenu.contains(event.target)) {
          mobileMenu.classList.add('hidden');
        }
      });
    }
  });
</script>

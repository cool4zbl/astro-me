---
export interface Props {
  title: string;
  description: string;
  image?: string;
  article?: boolean;
  publishedTime?: Date;
  modifiedTime?: Date;
  tags?: string[];
  author?: string;
}

const {
  title,
  description,
  image = '/og-image.jpg',
  article = false,
  publishedTime,
  modifiedTime,
  tags = [],
  author = 'Blog Author'
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const imageURL = new URL(image, Astro.site);

// 生成结构化数据
const structuredData = {
  "@context": "https://schema.org",
  "@type": article ? "BlogPosting" : "WebSite",
  "headline": title,
  "description": description,
  "image": imageURL.toString(),
  "url": canonicalURL.toString(),
  ...(article && {
    "author": {
      "@type": "Person",
      "name": author
    },
    "publisher": {
      "@type": "Organization",
      "name": "My Blog",
      "logo": {
        "@type": "ImageObject",
        "url": new URL('/favicon.jpg', Astro.site).toString()
      }
    },
    "datePublished": publishedTime?.toISOString(),
    "dateModified": (modifiedTime || publishedTime)?.toISOString(),
    "keywords": tags.join(', ')
  })
};
---

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />
<meta name="author" content={author} />
<link rel="canonical" href={canonicalURL} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={article ? "article" : "website"} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={imageURL} />
<meta property="og:site_name" content="My Blog" />
<meta property="og:locale" content="en_US" />

{article && publishedTime && (
  <meta property="article:published_time" content={publishedTime.toISOString()} />
)}
{article && modifiedTime && (
  <meta property="article:modified_time" content={modifiedTime.toISOString()} />
)}
{article && author && (
  <meta property="article:author" content={author} />
)}
{article && tags.map(tag => (
  <meta property="article:tag" content={tag} />
))}

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={canonicalURL} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={imageURL} />

<!-- Additional SEO Meta Tags -->
<meta name="robots" content="index, follow" />
<meta name="googlebot" content="index, follow" />

{tags.length > 0 && (
  <meta name="keywords" content={tags.join(', ')} />
)}

<!-- Structured Data -->
<script type="application/ld+json" set:html={JSON.stringify(structuredData)} />

---
import { getCollection } from 'astro:content';
import FormattedDate from './FormattedDate.astro';
import OptimizedImage from './OptimizedImage.astro';

const { currentSlug, currentTags, lang = 'zh' } = Astro.props;

// 获取所有博客文章
const allPosts = await getCollection('blog');

// 过滤掉当前文章，并根据标签相似度排序
const relatedPosts = allPosts
  .filter(post => post.slug !== currentSlug)
  .map(post => {
    const commonTags = post.data.tags.filter(tag => currentTags.includes(tag));
    return {
      ...post,
      similarity: commonTags.length
    };
  })
  .filter(post => post.similarity > 0)
  .sort((a, b) => b.similarity - a.similarity)
  .slice(0, 3);

const texts = {
  zh: {
    title: '相关文章',
    readMore: '阅读更多',
    noRelated: '暂无相关文章'
  },
  en: {
    title: 'Related Posts',
    readMore: 'Read More',
    noRelated: 'No related posts found'
  }
};

const t = texts[lang];
---

{relatedPosts.length > 0 && (
  <section class="mt-16 border-t pt-16">
    <div class="mb-8">
      <h2 class="text-2xl font-bold text-foreground mb-2 flex items-center">
        <svg class="mr-3 h-6 w-6 text-primary" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z" />
        </svg>
        {t.title}
      </h2>
      <div class="h-1 w-16 bg-primary rounded-full"></div>
    </div>

    <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
      {relatedPosts.map((post) => (
        <article class="group bg-card border rounded-xl overflow-hidden shadow-sm hover:shadow-md transition-all duration-200">
          {post.data.heroImage && (
            <div class="aspect-video overflow-hidden">
              <OptimizedImage
                src={post.data.heroImage}
                alt={post.data.title}
                width={640}
                height={360}
                class="w-full h-full object-cover transition-transform duration-200 group-hover:scale-105"
                sizes="(max-width: 1024px) 100vw, 320px"
                format="webp"
                loading="lazy"
              />
            </div>
          )}
          <div class="p-6">
            <div class="flex items-center gap-2 text-xs text-muted-foreground mb-3">
              <FormattedDate date={post.data.pubDate} />
              {post.data.tags.slice(0, 2).map(tag => (
                <span class="inline-flex items-center rounded-full bg-primary/10 px-2 py-1 text-xs font-medium text-primary">
                  {tag}
                </span>
              ))}
            </div>
            <h3 class="text-lg font-semibold text-card-foreground mb-2 group-hover:text-primary transition-colors line-clamp-2">
              {post.data.title}
            </h3>
            <p class="text-sm text-muted-foreground mb-4 line-clamp-3">
              {post.data.description}
            </p>
            <a
              href={`/blog/${post.slug}`}
              class="inline-flex items-center text-sm font-medium text-primary hover:text-accent transition-colors"
            >
              {t.readMore}
              <svg class="ml-1 h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
              </svg>
            </a>
          </div>
        </article>
      ))}
    </div>
  </section>
)}

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>

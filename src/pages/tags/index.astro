---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { getPageMetadata } from '../../utils/metadata';

const allPosts = await getCollection('blog');
const publishedPosts = allPosts.filter(post => !post.data.draft);

// Count all tags and their article counts
const tagCounts = {} as Record<string, number>;
publishedPosts.forEach(post => {
  post.data.tags.forEach(tag => {
    tagCounts[tag] = (tagCounts[tag] || 0) + 1;
  });
});

// Sort tags by article count
const sortedTags = Object.entries(tagCounts)
  .sort(([,a], [,b]) => b - a)
  .map(([tag, count]) => ({ tag, count }));
const { title: pageTitle, description: pageDescription } = getPageMetadata('tags');
---

<BaseLayout title={pageTitle} description={pageDescription}>
  <Header />

  <main class="flex-1">
    <div class="container-width py-16">
      <div class="mx-auto max-w-4xl">
        <header class="text-center mb-16">
          <h1 class="text-3xl font-bold tracking-tight text-foreground sm:text-4xl">
            Article Tags
          </h1>
          <p class="mt-2 text-lg leading-8 text-muted-foreground">
            {sortedTags.length} tags, {publishedPosts.length} articles
          </p>
        </header>

        {sortedTags.length > 0 ? (
          <div class="grid gap-4 sm:grid-cols-2 lg:grid-cols-3">
            {sortedTags.map(({ tag, count }) => (
              <a
                href={`/tags/${tag}/`}
                class="group relative rounded-lg border bg-card p-6 hover:bg-accent transition-colors"
              >
                <div class="flex items-center justify-between">
                  <h3 class="text-lg font-semibold text-card-foreground group-hover:text-accent-foreground">
                    {tag}
                  </h3>
                  <span class="inline-flex items-center rounded-full bg-secondary px-2.5 py-0.5 text-xs font-medium text-secondary-foreground">
                    {count} posts
                  </span>
                </div>
                <p class="mt-2 text-sm text-muted-foreground">
                  View all articles about "{tag}"
                </p>
              </a>
            ))}
          </div>
        ) : (
          <div class="text-center py-16">
            <p class="text-muted-foreground">No tags available</p>
          </div>
        )}

        <!-- Tag Cloud -->
        <div class="mt-16 border-t pt-16">
          <h2 class="text-2xl font-bold text-center mb-8">Tag Cloud</h2>
          <div class="flex flex-wrap justify-center gap-2">
            {sortedTags.map(({ tag, count }) => {
              // Calculate font size based on article count
              const fontSize = Math.min(Math.max(count * 0.2 + 0.8, 0.8), 2);
              return (
                <a
                  href={`/tags/${tag}/`}
                  class="inline-block px-3 py-1 rounded-full bg-secondary text-secondary-foreground hover:bg-secondary/80 transition-colors"
                  style={`font-size: ${fontSize}rem;`}
                >
                  {tag}
                </a>
              );
            })}
          </div>
        </div>
      </div>
    </div>
  </main>

  <Footer />
</BaseLayout>

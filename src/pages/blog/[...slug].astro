---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import TagList from '../../components/TagList.astro';
import Comments from '../../components/Comments.astro';
import TableOfContents from '../../components/TableOfContents.astro';
import RelatedPosts from '../../components/RelatedPosts.astro';
import OptimizedImage from '../../components/OptimizedImage.astro';
import { buildPageTitle } from '../../utils/metadata';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

const post = Astro.props;
const { Content, headings } = await post.render();
const pageTitle = buildPageTitle(post.data.title);
const pageDescription = post.data.description;
---

<BaseLayout
  title={pageTitle}
  description={pageDescription}
  image={post.data.heroImage}
  article={true}
  publishedTime={post.data.pubDate}
  modifiedTime={post.data.updatedDate}
  tags={post.data.tags}
>
  <Header />

  <main class="flex-1">
    <article class="container-width py-12 lg:py-16">
      <div class="mx-auto max-w-3xl">
        <!-- Main content area -->
        <header class="mb-6 space-y-4">
          <h1 class="text-3xl font-bold tracking-tight text-foreground sm:text-4xl">
            {post.data.title}
          </h1>
          <div class="flex flex-wrap items-center gap-4 text-sm text-muted-foreground">
            <div class="flex items-center gap-1">
              <span class="font-medium text-muted-foreground italic">Published on</span>
              <FormattedDate date={post.data.pubDate} class="text-foreground/80" />
            </div>
            {post.data.updatedDate && (
              <div class="flex items-center gap-1">
                  <span class="font-medium text-muted-foreground italic">Updated on</span>
                  <FormattedDate date={post.data.updatedDate} class="text-foreground/80" />
              </div>
            )}
          </div>
          {post.data.tags.length > 0 && (
            <div>
              <TagList tags={post.data.tags} size="lg" />
            </div>
          )}
        </header>

          {post.data.heroImage && (
            <div class="mb-8 overflow-hidden rounded-xl border bg-muted/40">
              <OptimizedImage
                src={post.data.heroImage}
                alt={post.data.title}
                width={1280}
                height={720}
                class="h-full w-full max-h-80 object-cover"
                sizes="(max-width: 1024px) 100vw, 768px"
                format="webp"
                priority={true}
              />
            </div>
          )}

        <div class="prose prose-lg mx-auto dark:prose-invert prose-headings:first:mt-0">
          <Content />
        </div>

        <footer class="mt-12 border-t pt-8">
            <div class="flex flex-col gap-4 text-sm text-muted-foreground sm:flex-row sm:items-center sm:justify-between">
                <div class="space-y-2">
                    <p><span class="italic">Last Updated on</span><FormattedDate
                            class="text-foreground/80"
                            date={post.data.pubDate || post.data.updatedDate} /></p>
                    {post.data.tags.length > 0 && (
                            <TagList tags={post.data.tags} />
                    )}
                </div>
            <a
              href="/blog"
              class="inline-flex items-center text-sm font-medium text-primary hover:text-accent"
            >
              ‚Üê Back to blog
            </a>
          </div>
        </footer>

        <div class="mt-12">
          <RelatedPosts
            currentSlug={post.slug}
            currentTags={post.data.tags}
            lang="en"
          />
        </div>

        <div class="mt-16">
          <Comments />
        </div>
      </div>
    </article>

    <TableOfContents headings={headings} lang="en" />
  </main>

  <Footer />

  <style>
    :global(.prose > h1:first-child) {
      display: none;
    }
  </style>
</BaseLayout>

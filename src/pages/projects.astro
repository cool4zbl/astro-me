---
import BaseLayout from '../layouts/BaseLayout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import OptimizedImage from '../components/OptimizedImage.astro';
import { getLangFromUrl, type Language } from '../i18n/config';
import { getProjectsCopy } from '../i18n/pages/projects';
import { getPageMetadata } from '../utils/metadata';

const lang: Language = Astro.props?.lang ?? getLangFromUrl(Astro.url);

const copy = getProjectsCopy(lang);
const { title: pageTitle, description: pageDescription } = getPageMetadata('projects');

const actionClassMap = {
  primary:
    'inline-flex items-center rounded-md bg-primary px-4 py-2 text-sm font-semibold text-primary-foreground shadow-sm transition-colors hover:bg-primary/90',
  outline:
    'inline-flex items-center rounded-md border border-input bg-background px-4 py-2 text-sm font-semibold text-foreground shadow-sm transition-colors hover:bg-accent hover:text-accent-foreground',
} as const;
---

<BaseLayout title={pageTitle} description={pageDescription}>
  <Header />

  <main class="flex-1">
    <!-- Hero Section -->
    <section class="section-padding bg-gradient-to-br from-background via-muted/20 to-background">
      <div class="container-width text-center">
        <h1 class="text-4xl font-bold tracking-tight text-foreground sm:text-5xl lg:text-6xl mb-6">
          {copy.hero.prefix}
          {copy.hero.prefix ? ' ' : ''}
          <span class="gradient-text">{copy.hero.highlight}</span>
          {copy.hero.suffix ? ` ${copy.hero.suffix}` : ''}
        </h1>
        <p class="mx-auto max-w-2xl text-lg leading-8 text-muted-foreground sm:text-xl">
          {copy.hero.description}
        </p>
      </div>
    </section>

    <!-- Featured Projects -->
    <section class="section-padding">
      <div class="container-width">
        <div class="space-y-24">
          {copy.featured.map((project, index) => (
            <div class="grid gap-12 items-center lg:grid-cols-2 lg:gap-16">
              <div class={index % 2 === 0 ? 'order-2 lg:order-1' : 'order-2 lg:order-1'}>
                <div class={`inline-flex items-center rounded-full px-3 py-1 text-sm font-medium mb-4 ${project.badge.class}`}>
                  {project.badge.label}
                </div>
                <h2 class="text-3xl font-bold tracking-tight text-foreground sm:text-4xl mb-4">
                  {project.title}
                </h2>
                <p class="text-lg text-muted-foreground mb-6 leading-relaxed">
                  {project.description}
                </p>
                <div class="space-y-4 mb-6">
                  {project.sections.map((section) => (
                    <div>
                      <h3 class="font-semibold text-foreground mb-2">{section.title}:</h3>
                      <ul class="text-muted-foreground space-y-1 text-sm list-disc pl-6">
                        {section.items.map((item) => (
                          <li>{item}</li>
                        ))}
                      </ul>
                    </div>
                  ))}
                </div>
                <div class="flex flex-wrap gap-2 mb-6">
                  {project.stack.map((tech) => (
                    <span class="inline-flex items-center rounded-full bg-primary/10 px-3 py-1 text-sm font-medium text-primary">{tech}</span>
                  ))}
                </div>
                {project.actions && project.actions.length > 0 && (
                  <div class="flex gap-4 flex-wrap">
                    {project.actions.map((action) => (
                      <a
                        target="_blank"
                        href={action.href ?? '#'} class={actionClassMap[action.variant]}>
                        {action.label}
                      </a>
                    ))}
                  </div>
                )}
              </div>
              <div class={index % 2 === 0 ? 'order-1 lg:order-2' : 'order-1 lg:order-2'}>
                <div class="aspect-auto rounded-xl bg-muted overflow-hidden shadow-2xl">
                  <OptimizedImage
                    src={project.image.src}
                    alt={project.image.alt}
                    width={800}
                    height={600}
                    class="h-full w-full object-cover"
                    loading="lazy"
                  />
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>

    <!-- Other Projects Grid -->
    <section class="section-padding bg-muted/30">
      <div class="container-width">
        <div class="text-center mb-16">
          <h2 class="text-3xl font-bold tracking-tight text-foreground sm:text-4xl mb-4">
            {copy.other.title}
          </h2>
          <p class="text-lg text-muted-foreground max-w-2xl mx-auto">
            {copy.other.description}
          </p>
        </div>

        <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-2">
          {copy.other.cards.map((card) => (
            <div class="rounded-xl border bg-card p-6 shadow-sm transition-all duration-200 hover:shadow-md">
              <div class="aspect-square rounded-lg bg-muted mb-4 overflow-hidden">
                <OptimizedImage
                  src={card.image.src}
                  alt={card.image.alt}
                  width={350}
                  height={200}
                  class="h-full w-full object-fill"
                  loading="lazy"
                />
              </div>
              <h3 class="text-xl font-semibold text-card-foreground mb-2">{card.title}</h3>
              <p class="text-muted-foreground text-sm mb-4">
                {card.description}
              </p>
              <div class="flex flex-wrap gap-2 mb-4">
                {card.tags.map((tag) => (
                  <span class="inline-flex items-center rounded-full bg-secondary px-2 py-1 text-xs font-medium text-secondary-foreground">{tag}</span>
                ))}
              </div>
              <a target="_blank" href={card.url ?? '#'} class="text-primary hover:text-accent font-medium text-sm transition-colors">
                View Project â†’
              </a>
            </div>
          ))}
        </div>
      </div>
    </section>
  </main>

  <Footer />
</BaseLayout>

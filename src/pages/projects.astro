---
import BaseLayout from '../layouts/BaseLayout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import OptimizedImage from '../components/OptimizedImage.astro';
import { getLangFromUrl, type Language } from '../i18n/config';

const lang: Language = Astro.props?.lang ?? getLangFromUrl(Astro.url);

const translations = {
  en: {
    hero: {
      prefix: 'My',
      highlight: 'Projects',
      suffix: '',
      description:
        'Platform builds that automated customer operations, scaled geospatial data quality, and powered experimentation for millions of users.',
    },
    featured: [
      {
        image: { src: '/placeholder.svg?height=400&width=600', alt: 'JETMS operational workspace mockup' },
        badge: { label: 'Operations Platform', class: 'bg-primary/10 text-primary' },
        title: 'JETMS Operational Platform',
        subtitle: '',
        description:
          'Multi-tenant workspace that unified 20+ Just Eat Takeaway support tools, enabling agents across Europe to resolve customer issues faster with shared data and automation.',
        sections: [
          {
            title: 'Impact',
            items: [
              'Consolidated fragmented tooling into a single platform used by 1,000+ agents across 8 markets.',
              'Reduced resolution SLA by ~33% through reusable workflows and consistent data contracts.',
              'Provided compliance-ready audit trails and access controls for regulated operations.',
            ],
          },
          {
            title: 'My Focus',
            items: [
              'Led architecture for Java/Spring Boot CQRS services and TypeScript front-end integration.',
              'Designed tenant-aware routing, event-sourcing patterns, and rollout strategy.',
              'Partnered with product and ops leadership to prioritize automation opportunities.',
            ],
          },
        ],
        stack: ['Java', 'Spring Boot', 'CQRS', 'MySQL', 'TypeScript', 'AWS'],
        actions: [
          { label: 'Architecture Notes', variant: 'primary' },
          { label: 'Operations Playbook', variant: 'outline' },
        ],
      },
      {
        image: { src: '/placeholder.svg?height=400&width=600', alt: 'Jarvis crowdsourcing dashboard mockup' },
        badge: { label: 'Mapping Platform', class: 'bg-accent/10 text-accent' },
        title: 'Jarvis Map Collection System',
        subtitle: '',
        description:
          'Crowdsourced geospatial task engine that helped Grab maintain up-to-date maps for ride-hailing and deliveries across Southeast Asia.',
        sections: [
          {
            title: 'Impact',
            items: [
              'Automated 300k+ mapping tasks and processed 400k geospatial assets with strong SLA guarantees.',
              'Improved marketplace accuracy, reducing passenger and driver cancellations tied to map errors.',
              'Delivered operational transparency for regional operations teams with search and review tooling.',
            ],
          },
          {
            title: 'My Focus',
            items: [
              'Built Go microservices with PostgreSQL/PostGIS and Kafka pipelines for task orchestration.',
              'Implemented ElasticSearch indexing and reviewer workflows for quality assurance.',
              'Collaborated with data science partners on scoring models and prioritization logic.',
            ],
          },
        ],
        stack: ['Go', 'PostgreSQL', 'PostGIS', 'Kafka', 'ElasticSearch'],
        actions: [
          { label: 'System Overview', variant: 'primary' },
          { label: 'Operational Metrics', variant: 'outline' },
        ],
      },
      {
        image: { src: '/placeholder.svg?height=400&width=600', alt: 'Darwin experimentation analytics mockup' },
        badge: { label: 'Experimentation', class: 'bg-primary/10 text-primary' },
        title: 'Darwin Experimentation Platform',
        subtitle: '',
        description:
          'High-scale experimentation stack powering Ant Group products with consistent traffic allocation and real-time insight.',
        sections: [
          {
            title: 'Impact',
            items: [
              'Supported 15M+ DAUs and 1,000+ yearly experiments with standardized SDK contracts.',
              'Delivered 2% conversion lift and $10M+ annual savings by accelerating trustworthy experimentation.',
              'Enabled cross-device consistency through deterministic allocation and caching strategies.',
            ],
          },
          {
            title: 'My Focus',
            items: [
              'Re-architected Java APIs and client SDKs with backward-compatible rollout plans.',
              'Implemented secondary hashing and offline caching to cut server-side computation by 40%.',
              'Partnered with analytics and product teams on experiment governance best practices.',
            ],
          },
        ],
        stack: ['Java', 'SDKs', 'Experimentation', 'Redis', 'Microservices'],
        actions: [
          { label: 'Platform Guide', variant: 'primary' },
          { label: 'Technical Deep Dive', variant: 'outline' },
        ],
      },
    ],
    other: {
      title: 'Other Projects',
      description: 'Additional initiatives that strengthened observability, automation, and user experience across platforms.',
      cards: [
        {
          image: { src: '/placeholder.svg?height=200&width=350', alt: 'Help experience orchestration diagram' },
          title: 'Help Experience Orchestration Layer',
          description: 'Event-driven chatbot backend coordinating handoffs between automation, live agents, and order systems; reduced manual escalations by 60%.',
          tags: ['Java', 'Kafka', 'AWS SQS'],
        },
        {
          image: { src: '/placeholder.svg?height=200&width=350', alt: 'Logging pipeline visualization' },
          title: 'Centralized Logging Pipeline',
          description: 'Benthos and Kafka-powered ingestion pipeline feeding OpenSearch dashboards to cut MTTR by 25% and expose proactive alerts.',
          tags: ['Benthos', 'Kafka', 'OpenSearch'],
        },
        {
          image: { src: '/placeholder.svg?height=200&width=350', alt: 'Street-view processing mockup' },
          title: 'KartaView Street-View Service',
          description: 'Go/PostGIS microservice applying Douglas–Peucker simplification to shrink geospatial payloads by 70% while improving query latency.',
          tags: ['Go', 'PostGIS', 'Geospatial'],
        },
      ],
    },
  },
  zh: {
    hero: {
      prefix: '我的',
      highlight: '项目',
      suffix: '',
      description: '这些平台级项目覆盖外卖客服自动化、众包地图质量以及金融级实验体系，真实反映了我在大规模后端工程上的经验。',
    },
    featured: [
      {
        image: { src: '/placeholder.svg?height=400&width=600', alt: 'JETMS 运营平台界面示意' },
        badge: { label: '运营平台', class: 'bg-primary/10 text-primary' },
        title: 'JETMS 运营平台',
        subtitle: '',
        description:
          '为 Just Eat Takeaway 构建的多租户运营工作台，将 20+ 客服工具统一在同一平台，帮助欧洲市场的客服团队更快解决订单问题。',
        sections: [
          {
            title: '业务成效',
            items: [
              '统一分散的工具，服务 8 个市场、1000+ 客服代理的日常工作。',
              '通过复用流程与数据契约，使处理 SLA 提升约 33%。',
              '内置合规审计与权限控制，满足高度监管的运营要求。',
            ],
          },
          {
            title: '我的职责',
            items: [
              '主导 Java/Spring Boot CQRS 服务与 TypeScript 前端整合。',
              '设计多租户路由、事件溯源模式及灰度发布策略。',
              '与产品、运营负责人共建自动化路线图，识别最高价值场景。',
            ],
          },
        ],
        stack: ['Java', 'Spring Boot', 'CQRS', 'MySQL', 'TypeScript', 'AWS'],
        actions: [
          { label: '架构笔记', variant: 'primary' },
          { label: '运营手册', variant: 'outline' },
        ],
      },
      {
        image: { src: '/placeholder.svg?height=400&width=600', alt: 'Jarvis 众包任务面板示意' },
        badge: { label: '地图平台', class: 'bg-accent/10 text-accent' },
        title: 'Jarvis 地图众包系统',
        subtitle: '',
        description:
          '为 Grab 打造的众包地图采集引擎，确保东南亚出行与配送业务拥有最新、可靠的地理数据。',
        sections: [
          {
            title: '业务成效',
            items: [
              '自动编排 30 万+ 地图任务，沉淀 40 万条地理要素并保障 SLA。',
              '显著降低乘客与司机因地图错误导致的取消率。',
              '为区域运营团队提供检索、复核与回溯工具，透明管理生产流程。',
            ],
          },
          {
            title: '我的职责',
            items: [
              '构建基于 Go、PostgreSQL/PostGIS、Kafka 的任务编排微服务。',
              '实现 ElasticSearch 索引与质检工作流，提升数据质量。',
              '与数据科学团队共建任务评分模型与优先级策略。',
            ],
          },
        ],
        stack: ['Go', 'PostgreSQL', 'PostGIS', 'Kafka', 'ElasticSearch'],
        actions: [
          { label: '系统概览', variant: 'primary' },
          { label: '运营指标', variant: 'outline' },
        ],
      },
      {
        image: { src: '/placeholder.svg?height=400&width=600', alt: 'Darwin 实验分析界面示意' },
        badge: { label: '实验平台', class: 'bg-primary/10 text-primary' },
        title: 'Darwin 实验平台',
        subtitle: '',
        description:
          '支撑蚂蚁集团产品的高并发实验体系，提供一致的流量分配与实时分析能力。',
        sections: [
          {
            title: '业务成效',
            items: [
              '稳定支撑 1500 万+ 日活、每年 1000+ 实验，全部基于统一 SDK 契约。',
              '帮助业务实现 2% 转化率提升与每年 1000 万美元以上的收益贡献。',
              '通过确定性分流与缓存策略确保跨终端结果一致。',
            ],
          },
          {
            title: '我的职责',
            items: [
              '重构 Java API 与客户端 SDK，保障平滑升级与兼容。',
              '实现二次哈希与本地缓存，将服务端计算量降低 40%。',
              '与分析、产品团队共建实验治理规范。',
            ],
          },
        ],
        stack: ['Java', 'SDK', '实验平台', 'Redis', '微服务'],
        actions: [
          { label: '平台指南', variant: 'primary' },
          { label: '技术解析', variant: 'outline' },
        ],
      },
    ],
    other: {
      title: '更多项目',
      description: '还有一些项目展示了我在不同场景下的工程实践与解决问题的方式。',
      cards: [
        {
          image: { src: '/placeholder.svg?height=200&width=350', alt: '客服编排架构示意图' },
          title: '客服编排引擎',
          description: '事件驱动的聊天机器人后台，协调自动化、人工坐席与订单系统，将人工升级率降低 60%。',
          tags: ['Java', 'Kafka', 'AWS SQS'],
        },
        {
          image: { src: '/placeholder.svg?height=200&width=350', alt: '日志管线示意图' },
          title: '集中式日志管线',
          description: '基于 Benthos 与 Kafka 的日志采集，接入 OpenSearch 仪表盘，使 MTTR 降低 25% 并实现主动告警。',
          tags: ['Benthos', 'Kafka', 'OpenSearch'],
        },
        {
          image: { src: '/placeholder.svg?height=200&width=350', alt: '街景处理流程示意图' },
          title: 'KartaView 街景服务',
          description: '使用 Go/PostGIS 与 Douglas–Peucker 算法，将地理数据体积减少 70%，显著提升查询延迟表现。',
          tags: ['Go', 'PostGIS', '地理空间'],
        },
      ],
    },
  },
} as const;

const copy = translations[lang] ?? translations.en;

const actionClassMap = {
  primary:
    'inline-flex items-center rounded-md bg-primary px-4 py-2 text-sm font-semibold text-primary-foreground shadow-sm transition-colors hover:bg-primary/90',
  outline:
    'inline-flex items-center rounded-md border border-input bg-background px-4 py-2 text-sm font-semibold text-foreground shadow-sm transition-colors hover:bg-accent hover:text-accent-foreground',
} as const;
---

<BaseLayout 
  title="Projects - Binliu Zhang"
  description="Explore platforms I built for marketplace operations, geospatial data quality, and large-scale experimentation across Just Eat Takeaway, Grab, and Ant Group."
>
  <Header />
  
  <main class="flex-1">
    <!-- Hero Section -->
    <section class="section-padding bg-gradient-to-br from-background via-muted/20 to-background">
      <div class="container-width text-center">
        <h1 class="text-4xl font-bold tracking-tight text-foreground sm:text-5xl lg:text-6xl mb-6">
          {copy.hero.prefix}
          {copy.hero.prefix ? ' ' : ''}
          <span class="gradient-text">{copy.hero.highlight}</span>
          {copy.hero.suffix ? ` ${copy.hero.suffix}` : ''}
        </h1>
        <p class="mx-auto max-w-2xl text-lg leading-8 text-muted-foreground sm:text-xl">
          {copy.hero.description}
        </p>
      </div>
    </section>

    <!-- Featured Projects -->
    <section class="section-padding">
      <div class="container-width">
        <div class="space-y-24">
          {copy.featured.map((project, index) => (
            <div class="grid gap-12 items-center lg:grid-cols-2 lg:gap-16">
              <div class={index % 2 === 0 ? 'order-2 lg:order-1' : 'order-2 lg:order-1'}>
                <div class={`inline-flex items-center rounded-full px-3 py-1 text-sm font-medium mb-4 ${project.badge.class}`}>
                  {project.badge.label}
                </div>
                <h2 class="text-3xl font-bold tracking-tight text-foreground sm:text-4xl mb-4">
                  {project.title}
                </h2>
                <p class="text-lg text-muted-foreground mb-6 leading-relaxed">
                  {project.description}
                </p>
                <div class="space-y-4 mb-6">
                  {project.sections.map((section) => (
                    <div>
                      <h3 class="font-semibold text-foreground mb-2">{section.title}:</h3>
                      <ul class="text-muted-foreground space-y-1 text-sm">
                        {section.items.map((item) => (
                          <li>• {item}</li>
                        ))}
                      </ul>
                    </div>
                  ))}
                </div>
                <div class="flex flex-wrap gap-2 mb-6">
                  {project.stack.map((tech) => (
                    <span class="inline-flex items-center rounded-full bg-primary/10 px-3 py-1 text-sm font-medium text-primary">{tech}</span>
                  ))}
                </div>
                <div class="flex gap-4 flex-wrap">
                  {project.actions.map((action) => (
                    <a href="#" class={actionClassMap[action.variant]}>
                      {action.label}
                    </a>
                  ))}
                </div>
              </div>
              <div class={index % 2 === 0 ? 'order-1 lg:order-2' : 'order-1 lg:order-2'}>
                <div class="aspect-video rounded-xl bg-muted overflow-hidden shadow-2xl">
                  <OptimizedImage
                    src={project.image.src}
                    alt={project.image.alt}
                    width={600}
                    height={400}
                    class="h-full w-full object-cover"
                    loading="lazy"
                  />
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>

    <!-- Other Projects Grid -->
    <section class="section-padding bg-muted/30">
      <div class="container-width">
        <div class="text-center mb-16">
          <h2 class="text-3xl font-bold tracking-tight text-foreground sm:text-4xl mb-4">
            {copy.other.title}
          </h2>
          <p class="text-lg text-muted-foreground max-w-2xl mx-auto">
            {copy.other.description}
          </p>
        </div>

        <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
          {copy.other.cards.map((card) => (
            <div class="rounded-xl border bg-card p-6 shadow-sm transition-all duration-200 hover:shadow-md">
              <div class="aspect-video rounded-lg bg-muted mb-4 overflow-hidden">
                <OptimizedImage
                  src={card.image.src}
                  alt={card.image.alt}
                  width={350}
                  height={200}
                  class="h-full w-full object-cover"
                  loading="lazy"
                />
              </div>
              <h3 class="text-xl font-semibold text-card-foreground mb-2">{card.title}</h3>
              <p class="text-muted-foreground text-sm mb-4">
                {card.description}
              </p>
              <div class="flex flex-wrap gap-2 mb-4">
                {card.tags.map((tag) => (
                  <span class="inline-flex items-center rounded-full bg-secondary px-2 py-1 text-xs font-medium text-secondary-foreground">{tag}</span>
                ))}
              </div>
              <a href="#" class="text-primary hover:text-accent font-medium text-sm transition-colors">
                {lang === 'zh' ? '查看项目 →' : 'View Project →'}
              </a>
            </div>
          ))}
        </div>
      </div>
    </section>
  </main>
  
  <Footer />
</BaseLayout>
